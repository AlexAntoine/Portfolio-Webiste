{{>postHeader}}

<div class="nav-wrapper">
        <div class="dots-wrapper"> 
            <div id="dot-1" class="browser-dots"></div>
            <div id="dot-2" class="browser-dots"></div>
            <div id="dot-3" class="browser-dots"></div>
        </div>
        <ul id="navigation"> 
            <li><a href="/">Home</a></li>
        </ul>
    
    </div>

    <div class="main-container">
		<br>

		<div class="img-container">
			<img src="https://images.unsplash.com/photo-1623282033815-40b05d96c903?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80">
		</div>
		
		<h3>Devcamper API</h3>

		<p>DevCamper-Api is a bootcamp directory API created with Node, Express, and MongoDB. This application is equipped with authentication, roles, permissions, password reset tokens, email functionality, and geocoding. 
            Other functionalities include pagination, filter, selecting, and sorting.
		<br>
		<br>
		DevCamper-Api is a CRUD REST API that was built with Node, Express, and MongoDB and is deployed through Heroku. In this app, you can create, read, 
		update, and delete a boot camp, a course, and other users. Different libraries were built into this app so that some of its features could work. 
		On some routes, packages like bcryptjs and jsonwebtoken were used to authenticate users that wanted access. Node geocoder was used to provide the 
		longitude and latitude of each location of the boot camps. Finally, security packages such as express-mongo-sanitize, xss-clean, cors, hpp, a
		nd helmet were used. Node geocoder was used to figure out the longitude and latitude of each boot camp location. The last thing that was done was to 
		use security packages like express-mongo-sanitize, xss-clean, cors, hpp, and helmet. I chose the MVC architecture for this project, minusÂ view, as it 
		helps reinforce the separation of concerns principle. Putting the models, methods, middleware, and routes in their own space makes it easy to maintain 
		and allows the system to grow. 

		To use this app, copy the URL <strong>https://antoine-devcamper-api.herokuapp.com/api/v1/bootcamps</strong> and paste it into your browser. To use the "create, 
		update, delete" feature, you will need Postman or something similar.
		You can find the GitHub repo here: <a class="project-github" target="_blank" href="https://github.com/AlexAntoine/Devcamper-api/tree/main">Devcamper API.</a> 
        </p>

		<h5>Technologies:</h5>
		<ul>
			<li>- Node js</li>
			<li>- MongoDB</li>
			<li>- Express </li>
			<li>- Heroku</li>
			<li>- Mongo Atlas</li>
            <li> <a class="web-link" href="https://antoine-devcamper-api.herokuapp.com/" target="_blank">- Devcamper-API</a></li>
		</ul>


		<h5>Home</h5>
		<div class="img-container">
			<a href="/images/devcamper-api/devcamper_home.png"><img src="/images/devcamper-api/devcamper_home.png"></a>
		</div>

		<h5>Auth Route</h5>
		<div class="img-container">
			<a href="/images/devcamper-api/devcamper_auth.png"><img src="/images/devcamper-api/devcamper_auth.png"></a>
		</div>

		<h5>Courses Route</h5>
		<div class="img-container">
			<a href="/images/devcamper-api/devcamper_courses.png"><img src="/images/devcamper-api/devcamper_courses.png"></a>
			
		</div>

        <h5>Admin Route</h5>
		<div class="img-container">
			<a href="/images/devcamper-api/devcamper_admin.png"><img src="/images/devcamper-api/devcamper_admin.png"></a>
		</div>

		<h5>Review Route</h5>
		<div class="img-container">
			<a href="/images/devcamper-api/devcamper_review.png"><img src="/images/devcamper-api/devcamper_review.png"></a>
		</div>
	</div>

{{>postFooter}}